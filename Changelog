Changelog:

V0.16 October 8, 2015

	* Added center model pre-processor
	* Updated all pre-processors to match those in the official software
	* Added ability to flash unencrypted firmware ROMs

V0.15 July 21, 2015

	* Changed translator mode to require the third part software to handle confirmation, skips, and resends

V0.14 July 20, 2015

	* Printer values that are used by the pre-processor stages can be provided as parameters
	* Automatically creates /usr/share/m3d-linux after collecting printer information if it doesn't exist

V0.13 July 15, 2015

	* Saves printer settings to /usr/share/m3d-linux/settings whenever printer is connected. This allows the settings to be used for the pre-processor without the printer having to be connected

V0.12 July 14, 2015

	* Added firmware version requirement
	* Virtual serial port manages all the resends and confirmations itself, so all of the issues with line numbers are fixed
	* Added a way to force the firmware ROM to flash instead of only flashing when corrupt or outdated

V0.11 July 10, 2015

	* Improved G-code parser so that it works with commands that don't have whitespace, like how Cura sends N0M110
	* Only forces elevated priveledges when using translate mode

V0.10 July 9, 2015

	* Added ability to process an input file with the desired pre-processor stages then outputting it to a file

V0.9 July 9, 2015

	* Creates a symbolic link for the virtual serial port now to allow other software to more easily recognize that it is a serial port

V0.8 July 9, 2015

	* Add initial code for setting backlash speed. Wont be used until I figure out which address in EEPROM stores the value.
	* Added a translator mode where the software acts as a middle man between other software and the printer. So now other software can send it standard G-code, which allows it to work with Octoprint.

V0.7 July 8, 2015

	* Fixed jerky movements by using the printers line number communication system for buffering
	* Fixed percent (Thanks jsc69)
	* If the system variables are set, the temporary files are created in TEMP, TMP, or TMPDIR (Thanks TonyH)
	* Fixed bug in Z calibration that would hang forever

V0.6 July 7, 2015

	* Moved all the pre-processor code to the printer library
	* Added a CLI
	* Added a validation pre-processor stage that removed M82, M82, and T commands (Thanks MrBeta)

V0.5 July 7, 2015

	* Finished all the G-code pre-processor stages. So now it has preparation, wave bonding, thermal bonding, bed compensation, backlash, and feed rate stages that can be preformed on a provided G-code file. Right not it just defaults to applying all of them except the wave bonding stage, but I'll make a CLI soon to allow better configurations at run time.
	* It obtains more information about the print before preforming the pre-processor stages now. So it determines the maximums and minimums of the model dimensions and extruder movements. The extruder movements are used to check if the model will go out of bounds.

V0.4 July 5, 2015

	* Changed how firmware files work. So no they need to be named with their version number, Ex: 2015062401.rom, and they don't need to be modified at all so ignore the whole formatting for the header introduced in V0.3. Right now it looks for a file named 2015062401.rom, but it'll later be changed so you can provide a file name as a parameter.
	* Implemented decrypting and encrypting firmware rom, it it'll decrypt the provided rom and generate a CRC32 from that which is used to verify that updating was successful
	* Got preparation, thermal bonding, and feed rate conversion G-code pre-processors all done
	* Added boundary checking for when the model is analyzed to prevent printing outside of what the printer is capable of

V0.3 July 3, 2015

	* Moved printer to its own class
	* Added firmware verification
	* Added fan type and extruder current EEPROM updating
	* Added firmware updating. Firmware files need to be in the following format:
		Bytes 1 - 3: M3D
		Byte 4: 0x1A
		Bytes 5 - 8: Firmware version in big endian. Ex: 2015062401 would be 0x78 0x1B 0x69 0x81
		Bytes 9 - 12: Firmware CRC in big endian. Ex: 459338129 would be 0x1B 0x60 0xF1 0x91
		Bytes 13 - EOF: The firmware data
	* Currently the rom has to be named test.rom and be in the same directory as the program for it to be used

V0.2 July 1, 2015

	* Implemented udev rule to map printer to /dev/micro_m3d, to change permission of printer to not require root, and avoid problems with Modem Manager
	* Simplified connecting to the printer
	* Moved G-code parser to its own class
	* Started implementing G-code pre-processor
	
V0.1 June 26, 2015

	* Initial release
